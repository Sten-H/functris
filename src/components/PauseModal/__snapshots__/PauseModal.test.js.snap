// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PauseModal component Should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PauseModal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Modal
          animation={true}
          autoFocus={true}
          backdrop={true}
          bsClass="modal"
          className="pause-modal"
          dialogComponentClass={[Function]}
          enforceFocus={true}
          keyboard={true}
          manager={
                    ModalManager {
                              "add": [Function],
                              "containers": Array [],
                              "data": Array [],
                              "handleContainerOverflow": true,
                              "hideSiblingNodes": true,
                              "isTopModal": [Function],
                              "modals": Array [],
                              "remove": [Function],
                            }
          }
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
>
          <ModalHeader
                    bsClass="modal-header"
                    closeButton={true}
                    closeLabel="Close"
          >
                    <h3
                              className="text-center"
                    >
                              PAUSED
                    </h3>
          </ModalHeader>
          <ModalBody
                    bsClass="modal-body"
                    componentClass="div"
          >
                    Press 'P', 'Esc' or click on game to unpause
          </ModalBody>
</Modal>,
        <KeyHandler
          keyEventName="keyup"
          keyValue="p"
          onKeyHandle={[Function]}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "animation": true,
          "autoFocus": true,
          "backdrop": true,
          "bsClass": "modal",
          "children": Array [
            <ModalHeader
              bsClass="modal-header"
              closeButton={true}
              closeLabel="Close"
>
              <h3
                            className="text-center"
              >
                            PAUSED
              </h3>
</ModalHeader>,
            <ModalBody
              bsClass="modal-body"
              componentClass="div"
>
              Press 'P', 'Esc' or click on game to unpause
</ModalBody>,
          ],
          "className": "pause-modal",
          "dialogComponentClass": [Function],
          "enforceFocus": true,
          "keyboard": true,
          "manager": ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          },
          "onHide": [Function],
          "renderBackdrop": [Function],
          "restoreFocus": true,
          "show": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-header",
              "children": <h3
                className="text-center"
>
                PAUSED
</h3>,
              "closeButton": true,
              "closeLabel": "Close",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": "PAUSED",
                "className": "text-center",
              },
              "ref": null,
              "rendered": "PAUSED",
              "type": "h3",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": null,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-body",
              "children": "Press 'P', 'Esc' or click on game to unpause",
              "componentClass": "div",
            },
            "ref": null,
            "rendered": "Press 'P', 'Esc' or click on game to unpause",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "class",
        "props": Object {
          "keyEventName": "keyup",
          "keyValue": "p",
          "onKeyHandle": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            className="pause-modal"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
                        ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
>
            <ModalHeader
                        bsClass="modal-header"
                        closeButton={true}
                        closeLabel="Close"
            >
                        <h3
                                    className="text-center"
                        >
                                    PAUSED
                        </h3>
            </ModalHeader>
            <ModalBody
                        bsClass="modal-body"
                        componentClass="div"
            >
                        Press 'P', 'Esc' or click on game to unpause
            </ModalBody>
</Modal>,
          <KeyHandler
            keyEventName="keyup"
            keyValue="p"
            onKeyHandle={[Function]}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "animation": true,
            "autoFocus": true,
            "backdrop": true,
            "bsClass": "modal",
            "children": Array [
              <ModalHeader
                bsClass="modal-header"
                closeButton={true}
                closeLabel="Close"
>
                <h3
                                className="text-center"
                >
                                PAUSED
                </h3>
</ModalHeader>,
              <ModalBody
                bsClass="modal-body"
                componentClass="div"
>
                Press 'P', 'Esc' or click on game to unpause
</ModalBody>,
            ],
            "className": "pause-modal",
            "dialogComponentClass": [Function],
            "enforceFocus": true,
            "keyboard": true,
            "manager": ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            },
            "onHide": [Function],
            "renderBackdrop": [Function],
            "restoreFocus": true,
            "show": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-header",
                "children": <h3
                  className="text-center"
>
                  PAUSED
</h3>,
                "closeButton": true,
                "closeLabel": "Close",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "PAUSED",
                  "className": "text-center",
                },
                "ref": null,
                "rendered": "PAUSED",
                "type": "h3",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "class",
              "props": Object {
                "bsClass": "modal-body",
                "children": "Press 'P', 'Esc' or click on game to unpause",
                "componentClass": "div",
              },
              "ref": null,
              "rendered": "Press 'P', 'Esc' or click on game to unpause",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "class",
          "props": Object {
            "keyEventName": "keyup",
            "keyValue": "p",
            "onKeyHandle": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
